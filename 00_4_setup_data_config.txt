; Liveability Index configuration template
;
; Save this file (00_setup_data_config.txt) with customised file locations as
; 'config.ini' within the '..\liveability_calculation\process' sub-folder
;
; (ie. change entries like 'D:/liveability/' to whereever corresponds to the location where the archive is stored on your computer) 
;
; All scripts within the process folder draw on the locations within this file to source and output resources (or will do).  As such, it is the best definition of where resources are sourced from and should be modified within a local implementation of the liveability index.
;

[data]
; region to which the current Liveability Index layer pertains
state      = Vic
sos_region = Urban
sd_region  = Metro

;optional sa3 region variable for alternate sa3 boundary set up script
; sa3_region = Ballarat

study_region        = VicMetro
study_buffer_metres = 10000
study_region_buffer = VicMetro_10km
inclusion_region    = VicMetroUrban

; absolute location of main parent data folder
; other paths to data are relative to this -- using os.path.join in script
; note that forward slashes are used in path structure, not backslashes
folderPath = D:/liveability/data/
workspace  = Vic_MetroUrban_GDA_1994_VICGRID94.gdb

; location of the 'Create_Hexagon_Tessellation' user written package toolbox
;   -- by Tim Whiteaker
;   -- acquired from http://www.arcgis.com/home/item.html?id=03388990d3274160afe240ac54763e57
create_hexagon_tbx = ../liveability_calculation/arcgis_packages/Create_Hexagon_Tessellation_41BC0CF7-3B1F-4598-8DE6-D5EE78060052/v101/Create_Hexagon_Tessellation.tbx


temp = C:/temp

[postgresql]
; PostgreSQL database connection details.  
; The script 00_5_create_sql_db.py establishes the database, password and ArcSDE connection file
; as per the details below. 
; Subsequent scripts will use this to connect.
; One may wish to choose a project/region specific database name - e.g. li_nsw

host     = localhost
database = li_vic
user     = python
password = yourpassword

; r_user is granted privileges of python
r_user    = rpostgres

; ArcSDE database connection file, to be generated
arc_sde_user   = arc_sde
sde_connection = li_vic.sde


[workspace]
; spatial reference to project features in workspace to
SpatialRef = GDA 1994 VICGRID94
; the ESPG code for SpatailRef above
srid = 3111

; location of features within the workspace geodatabase (to be created)

; Meshblock Dwellings feature name
mb_dwellings = MB2011_DwellingPersons

; Metro 10km buffer area (overlap for destinations and roads)
clippingBuffer_10km = VicMetro_10km

; hexagon diagonal length and buffer distance (metres)
;   -- hexagon sides will be half the length of this value
hex_diag   = 3000
hex_buffer = 3000
hex_grid   = VicMetro10_Hex_3kmDiag
hex_grid_buffer = VicMetro10_Hex_3kmDiag_Buffer_3km

[tables]
; these are listed here for reference, but are named locally in files
; the RHS of these table names are a description, for information purposes only
hex_parcels = summary of parcels in hexes
dist_cl_od_parcel_dest = dist_cl_od_parcel_dest
log_hex_sausage_buffer = log of sausage buffers indexed by hex
log_dist_cl_od_parcel_dest = log of A to B closest distance od matrix


[abs]
; ABS data sourced online is located in the ABS_downloads folder
; cleaned data referenced below (including output from scripts) is located in ABS_derived

abs_derived =  ABS/ABS_derived

; 00_stripToNetworkDiagonal.py converts UsualResidence_by_PlaceOfWork > LiveWorkSameSA3
UsualResidence_by_PlaceOfWork = ABS/ABS_derived/ABS_2011_Aust_SA2_UR_by_Aust_SA3_POW.csv
LiveWorkSameSA3               = ABS/ABS_derived/ABS_2011_Melb_SA2_LiveWorkSameSA3.csv
Adult18up_Employment          = ABS/ABS_derived/ABS_2011_Melb_SA1_Adult18up_Employment.csv  
CarOwnership                  = ABS/ABS_derived/ABS_2011_Melb_SA1_CarOwnership.csv  
MethodOfTravelToWorkPlace     = ABS/ABS_derived/ABS_2011_Melb_SA1_MethodOfTravelToWorkPlace.csv  
AffordableHousing             = ABS/ABS_derived/ABS_HB_RR_2011_AUS_SA1_30-40AffordableHousing.csv 
OwnerOccupiedTORentalHousing  = ABS/ABS_derived/ABS_HB_RR_2011_AUS_SA1_OwnerOccupiedTORentalHousing.csv 

; Index of Relative Socio-Economic Disadvantage (cleaned)
abs_irsd  = ABS/ABS_derived/ABS_2011_IRSD.csv

; meshblock source shape file (ABS download)
meshblocks       = ABS/ABS_downloads/shape_files/1270055001_mb_2011_vic_shape/MB_2011_VIC.shp

; meshblock ID MB_CODE11 datatype is varchar(11) 
meshblock_id    = MB_CODE11

; Dwelling count source csv (ABS download)
dwellings        = ABS/ABS_derived/censuscounts_mb_2011_aust.csv
; Dwelling count csv after cleaning (remove ABS comments at end of columns)
dwellings_string = ABS/ABS_derived/censuscounts_mb_2011_aust_dummyString.csv
dwellings_id     = Mesh_Block_ID 

abs_sos = ABS/ABS_downloads/shape_files/1270055004_sos_2011_aust_shape/SOS_2011_AUST.shp
abs_sd  = ABS/ABS_downloads/shape_files/1259030001_sd11aaust_shape/SD11aAust.shp
abs_lga = ABS/ABS_downloads/shape_files/1270055003_lga_2011_aust_shape/LGA_2011_AUST.shp
abs_suburb = ABS/ABS_downloads/shape_files/1270055003_ssc_2011_aust_shape/SSC_2011_AUST.shp

abs_sos_where_clause =  "STE_NAME11" = 'Victoria' AND "SOS_NAME11" IN( 'Major Urban' , 'Other Urban' )
abs_sd_where_clause  =  "SD_NAME11"  = 'Melbourne'

[roads]
; network data source
network_source_data  = Roads/CLEAN_Roads_2013.gdb/PedestrianRoads
network_source_edges = RoadsCLEAN

; clipped network dataset to be created
pedestrian_road_stub    = VicUrbanMetro_PedRoads
pedestrian_road_network = VicUrbanMetro_PedRoads/VicUrbanMetro_PedRoads_ND
pedestrian_road_edges    = RoadsCLEAN
pedestrian_road_junctions = PedestrianRoads_ND_Junctions

; intersections -  sourced from Rebecca Roberts' work for Walkability
intersections        = Roads/IntersectionWith_3plus_Legs.shp

; roads w/ freeways
; Roads sourced from cleaned collated roads w/ Freeways by RR for previous Liveability Transport work
; Heavy and Local groupings as per Traffic Results paper by Badland et al. 2016 and VicMap transport codebook  http://www.dse.vic.gov.au/__data/assets/pdf_file/0019/152821/Vicmap-Transport-Prod-Desc-V3_4.pdf
roads_with_freeways     = Roads/CleanRdsWithFreeways.shp
roads_sql               = "CLASS_CODE" IN (0,1, 2, 3, 4, 5)
roads_with_freeways_out = roadsAny 

[network]
; sausage buffer network size (metres)
distance = 1600
; search tolderance (m; features outside tolerance not located when adding locations)
tolerance = 500
;buffer distance for network lines as sausage buffer
line_buffer = 50

; this distance can be used as a limit beyond which not to search for destinations
limit = 3000

[pos]
# POS feature sourced from R:\5050\CHE\CIV\Data\VEAC
pos_entry_src = POS/VEACOS_50mvertices.shp
pos_entry     = VEACOS_50mvertices
pos_entry_rdxd = VEACOS_50mvertices_POSentryIDonly
pos_poly_id   = VEAC_ID
poly_id_maxLength = 10
pos_point_id  = OBJECTID
point_id_maxLength = 9
pos_categories = OS_GROUP
pos_entry_id = POS_entryID

[parcels]
;  Note -- I am trialling the replacement of VicMap addresses w/ GNAF due to usage in the national liveability project.  It will be worth writing a brief report on the impact of different address source on resulting liveability index, with all other things being equal. ALTHOUGH note that the mode of selection of parcels has been refined; so any comparison should be repeated w/ the new refined scripts using both datasets to make sure they truly are comparable CH 10/3/2017

; old data --- VicMap
; parcels   = VicMap_address_2013/address.shp
; parcel_id = PFI

; new data --- GNAF
; note that the GNAF ID is varchar(15), while VicMap can be (and was) represented as bigint
parcels   = PSMA_2012_Nov/GNAF_VIC_point.shp
parcel_id =  DETAIL_PID
parcel_dwellings = MetroUrban_ParcelDwellings
parcel_id_length = 30

[destinations]
src_destinations   = Destinations.gdb
study_destinations = MelbHexDestinations.gdb
study_dest_combined = MelbHexDestinations
destination_id     = Dest_OID
destinations_gdb_has_datasets = FALSE

; array / list of destinations 
; IMPORTANT -- note that order in list signifies destination index number, 
; additional destinations should be appended to end of list to ensure this order is respected across time.
; alternate versions of existing destinations are recommended to be incorporated as such (alternates), 
; so they will have their own new unique id number
;
; The table 'dest_type' will be created in Postgresql to keep track of destinations
; 
; Note that some scripts may still have the dest list specified in script, having not yet been updated 
; to use the config file version.  Be aware of this, and update where necessary!
destination_list     =CommunityCentre,MuseumArtGallery,CinemaTheatre,Libraries_2014,ChildcareOutOfSchool,Childcare,StateSecondarySchools,StatePrimarySchools,TAFEcampuses,u3a2012,UniversityMainCampuses2014,AgedCare_2012,CommunityHealthCentres,Dentists,GP_Clinics,MaternalChildHealth,SwimmingPools,Sport,Supermarkets,ConvenienceStores,PetrolStations,Newsagents,FishMeatPoultryShops,FruitVegeShops,Pharmacy,PostOffice,BanksFinance,BusStop2012,TramStops2012,TrainStations2012,CBD

destination_cutoff = 1000,3200,3200,1000,1600,800,1600,1600,3200,3200,3200,1000,1000,1000,1000,1000,1200,1200,1000,1000,1000,1000,1600,1600,1000,1600,1600,400,600,800,NULL

# The below are for reference purposes, but not explicitly drawn upon for pilot Liveability Index
count_destinations = CommunityCentre,MuseumArtGallery,CinemaTheatre,Libraries_2014,ChildcareOutOfSchool,Childcare,StateSecondarySchools,StatePrimarySchools,TAFEcampuses,u3a2012,UniversityMainCampuses2014,AgedCare_2012,CommunityHealthCentres,Dentists,GP_Clinics,MaternalChildHealth,SwimmingPools,Sport,Supermarkets,ConvenienceStores,PetrolStations,Newsagents,FishMeatPoultryShops,FruitVegeShops,Pharmacy,PostOffice,BanksFinance,BusStop2012,TramStops2012,TrainStations2012
count_cutoffs =   1000,3200,3200,1000,1600,800,1600,1600,3200,3200,3200,1000,1000,1000,1000,1000,1200,1200,1000,1000,1000,1000,1600,1600,1000,1600,1600,400,600,800

[air_pollution]
no2_source = air_pollution_no2\mbGMelb24March17_NO2_cleaned.csv
no2_table  = no2_pred